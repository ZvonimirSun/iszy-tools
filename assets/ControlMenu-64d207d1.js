import{_ as E,o as P,l as S,T as G,m,a as h,w as x,V as g,A as k,E as B,b as M,W as v,U as I}from"./index-05c20840.js";import{c as J}from"./createFile-ca480a95.js";function N(e,o){var t,s,r,n,i,a,u,l,c,p,d=0,f=e.type==="FeatureCollection",_=e.type==="Feature",F=f?e.features.length:1;for(t=0;t<F;t++){for(a=f?e.features[t].geometry:_?e.geometry:e,l=f?e.features[t].properties:_?e.properties:{},c=f?e.features[t].bbox:_?e.bbox:void 0,p=f?e.features[t].id:_?e.id:void 0,u=a?a.type==="GeometryCollection":!1,i=u?a.geometries.length:1,r=0;r<i;r++){if(n=u?a.geometries[r]:a,n===null){if(o(null,d,l,c,p)===!1)return!1;continue}switch(n.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":{if(o(n,d,l,c,p)===!1)return!1;break}case"GeometryCollection":{for(s=0;s<n.geometries.length;s++)if(o(n.geometries[s],d,l,c,p)===!1)return!1;break}default:throw new Error("Unknown Geometry Type")}}d++}}function A(e,o,t){var s=t;return N(e,function(r,n,i,a,u){n===0&&t===void 0?s=r:s=o(s,r,n,i,a,u)}),s}var C=6378137;function L(e){return A(e,function(o,t){return o+O(t)},0)}function O(e){var o=0,t;switch(e.type){case"Polygon":return w(e.coordinates);case"MultiPolygon":for(t=0;t<e.coordinates.length;t++)o+=w(e.coordinates[t]);return o;case"Point":case"MultiPoint":case"LineString":case"MultiLineString":return 0}return 0}function w(e){var o=0;if(e&&e.length>0){o+=Math.abs(b(e[0]));for(var t=1;t<e.length;t++)o-=Math.abs(b(e[t]))}return o}function b(e){var o,t,s,r,n,i,a,u=0,l=e.length;if(l>2){for(a=0;a<l;a++)a===l-2?(r=l-2,n=l-1,i=0):a===l-1?(r=l-1,n=0,i=1):(r=a,n=a+1,i=a+2),o=e[r],t=e[n],s=e[i],u+=(y(s[0])-y(o[0]))*Math.sin(y(t[1]));u=u*C*C/2}return u}function y(e){return e*Math.PI/180}const $={class:"controlMenu"},R={__name:"ControlMenu",setup(e){function o(r){if(r.target.files.length){const n=r.target.files[0],i=new FileReader;i.onload=()=>{if(i.result&&typeof i.result=="string")try{const a=JSON.parse(i.result);g.emit("updateEditor",a),g.emit("updateGeojsonLayer",a)}catch{}},i.readAsText(n)}r.target.value=""}function t(){g.emit("getGeoJson",function(r){r?J(JSON.stringify(r),"exportFile.geojson"):k.warning("无可导出数据")})}function s(){g.emit("getGeoJson",function(r){if(r){const n=L(r);n<1e6?v.alert(`面积: ${n.toFixed(2)} 平方米`,"信息"):n<1e8?v.alert(`面积: ${(n/1e4).toFixed(2)} 公顷`,"信息"):v.alert(`面积: ${(n/1e6).toFixed(2)} 平方千米`,"信息")}})}return(r,n)=>{const i=B;return P(),S("div",$,[G(m("input",{ref:"uploader",type:"file",accept:".json,.JSON,.geojson,.GEOJSON",onChange:o},null,544),[[I,!1]]),h(i,{onClick:n[0]||(n[0]=a=>r.$refs.uploader.click())},{default:x(()=>[M(" 打开 ")]),_:1}),h(i,{onClick:t},{default:x(()=>[M(" 保存 ")]),_:1}),m("i",{class:"i-icon-park-outline-info",onClick:s})])}}},U=E(R,[["__scopeId","data-v-f771bfc2"]]);export{U as default};
