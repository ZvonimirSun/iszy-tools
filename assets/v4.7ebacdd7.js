var r,t=new Uint8Array(16);function o(){if(!r&&!(r="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return r(t)}var n=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;function e(r){return"string"==typeof r&&n.test(r)}for(var a=[],u=0;u<256;++u)a.push((u+256).toString(16).substr(1));function i(r){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,o=(a[r[t+0]]+a[r[t+1]]+a[r[t+2]]+a[r[t+3]]+"-"+a[r[t+4]]+a[r[t+5]]+"-"+a[r[t+6]]+a[r[t+7]]+"-"+a[r[t+8]]+a[r[t+9]]+"-"+a[r[t+10]]+a[r[t+11]]+a[r[t+12]]+a[r[t+13]]+a[r[t+14]]+a[r[t+15]]).toLowerCase();if(!e(o))throw TypeError("Stringified UUID is invalid");return o}function s(r,t,n){var e=(r=r||{}).random||(r.rng||o)();if(e[6]=15&e[6]|64,e[8]=63&e[8]|128,t){n=n||0;for(var a=0;a<16;++a)t[n+a]=e[a];return t}return i(e)}export{o as r,i as s,s as v};
