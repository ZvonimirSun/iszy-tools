var e=Object.defineProperty,t=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable,s=(t,r,i)=>r in t?e(t,r,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[r]=i,a=(e,a)=>{for(var o in a||(a={}))r.call(a,o)&&s(e,o,a[o]);if(t)for(var o of t(a))i.call(a,o)&&s(e,o,a[o]);return e},o=(e,t,r)=>(s(e,"symbol"!=typeof t?t+"":t,r),r);import{n,l,p as c,a as h,o as m,c as d,b as f,F as b,x as g,u as v,y as u,w as p,r as x}from"./vendor.a2be80c6.js";import{_ as w}from"./container.0f0ec48a.js";/* empty css              *//* empty css              */class C{}o(C,"i",[[[0,0,0,0],[0,0,0,0],[1,1,1,1],[0,0,0,0]],[[0,0,1,0],[0,0,1,0],[0,0,1,0],[0,0,1,0]]]),o(C,"j",[[[1,0,0],[1,1,1],[0,0,0]],[[0,1,1],[0,1,0],[0,1,0]],[[0,0,0],[1,1,1],[0,0,1]],[[0,1,0],[0,1,0],[1,1,0]]]),o(C,"l",[[[0,0,1],[1,1,1],[0,0,0]],[[0,1,0],[0,1,0],[0,1,1]],[[0,0,0],[1,1,1],[1,0,0]],[[1,1,0],[0,1,0],[0,1,0]]]),o(C,"o",[[[0,0,0,0],[0,1,1,0],[0,1,1,0],[0,0,0,0]]]),o(C,"s",[[[0,0,0],[0,1,1],[1,1,0]],[[0,1,0],[0,1,1],[0,0,1]]]),o(C,"t",[[[0,1,0],[1,1,1],[0,0,0]],[[0,1,0],[0,1,1],[0,1,0]],[[0,0,0],[1,1,1],[0,1,0]],[[0,1,0],[1,1,0],[0,1,0]]]),o(C,"z",[[[0,0,0],[1,1,0],[0,1,1]],[[0,0,1],[0,1,1],[0,1,0]]]),o(C,"iLegend",[[0,0,0,0],[1,1,1,1]]),o(C,"jLegend",[[1,0,0,0],[1,1,1,0]]),o(C,"lLegend",[[0,0,1,0],[1,1,1,0]]),o(C,"oLegend",[[0,1,1,0],[0,1,1,0]]),o(C,"sLegend",[[0,1,1,0],[1,1,0,0]]),o(C,"tLegend",[[0,1,0,0],[1,1,1,0]]),o(C,"zLegend",[[1,1,0,0],[0,1,1,0]]);var y="@keyframes blink-87f2083e {\n0%, 50%, 100% {\n    opacity: 1;\n}\n25%, 75% {\n    opacity: 0;\n}\n}\n.gamePanel[data-v-87f2083e] {\n  height: max(min(calc(100vh - 32rem), calc(100vw - 8rem)), 29.7rem);\n  width: max(min(calc(100vh - 32rem), calc(100vw - 8rem)), 29.7rem);\n  margin: 0 auto;\n  border: calc(max(min(calc(100vh - 32rem), calc(100vw - 8rem)), 29.7rem) * 0.01) solid #1e1e1e;\n  border-right-color: #a1a1a1;\n  border-bottom-color: #d7d7d7;\n  border-left-color: #525252;\n  background: #000;\n  box-sizing: border-box;\n  padding: calc(max(min(calc(100vh - 32rem), calc(100vw - 8rem)), 29.7rem) * 0.01);\n  display: flex;\n}\n.gamePanel .tetrisPanel[data-v-87f2083e] {\n  width: fit-content;\n  display: grid;\n  grid-template-columns: repeat(12, 1fr);\n  grid-template-rows: repeat(22, 1fr);\n}\n.gamePanel .tetrisPanel .tetrisMainPanel[data-v-87f2083e] {\n  grid-column: 2/12;\n  grid-row: 2/22;\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(20, 1fr);\n}\n.gamePanel .infoPanel[data-v-87f2083e] {\n  height: 100%;\n  padding-left: calc(max(min(calc(100vh - 32rem), calc(100vw - 8rem)), 29.7rem) * 0.01);\n  flex: 1;\n  overflow-y: auto;\n  text-align: center;\n}\n.gamePanel .infoPanel .info[data-v-87f2083e] {\n  text-align: left;\n  font-size: calc(max(min(calc(100vh - 32rem), calc(100vw - 8rem)), 29.7rem) * 0.05);\n  line-height: calc(calc(max(min(calc(100vh - 32rem), calc(100vw - 8rem)), 29.7rem) * 0.05) + .8rem);\n  color: #fff;\n  margin-bottom: calc(max(min(calc(100vh - 32rem), calc(100vw - 8rem)), 29.7rem) * 0.01);\n}\n.gamePanel .infoPanel .nextTetrimino[data-v-87f2083e] {\n  margin: 0 auto;\n  display: grid;\n  width: fit-content;\n  grid-template-columns: repeat(4, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n}\n.gamePanel .infoPanel .startGame[data-v-87f2083e] {\n  width: fit-content;\n  font-size: calc(max(min(calc(100vh - 32rem), calc(100vw - 8rem)), 29.7rem) * 0.05);\n  font-weight: 700;\n  color: #fff;\n  line-height: calc(calc(max(min(calc(100vh - 32rem), calc(100vw - 8rem)), 29.7rem) * 0.05) + .8rem);\n  cursor: pointer;\n  margin: calc(max(min(calc(100vh - 32rem), calc(100vw - 8rem)), 29.7rem) * 0.05) auto 0;\n  background: #787878;\n  border: calc(calc(max(min(calc(100vh - 32rem), calc(100vw - 8rem)), 29.7rem) * 0.96 / (20 + 2)) * 0.2) solid #d7d7d7;\n  border-right-color: #525252;\n  border-bottom-color: #1e1e1e;\n  border-left-color: #a1a1a1;\n}\n.gamePanel .infoPanel .startGame[data-v-87f2083e]:active {\n  border-top-color: #1e1e1e;\n  border-right-color: #a1a1a1;\n  border-bottom-color: #d7d7d7;\n  border-left-color: #525252;\n  font-size: calc(calc(max(min(calc(100vh - 32rem), calc(100vw - 8rem)), 29.7rem) * 0.05) * 0.9);\n  transition: 0.1s;\n}\n.gamePanel .tetrisCell[data-v-87f2083e] {\n  height: calc(max(min(calc(100vh - 32rem), calc(100vw - 8rem)), 29.7rem) * 0.96 / (20 + 2));\n  width: calc(max(min(calc(100vh - 32rem), calc(100vw - 8rem)), 29.7rem) * 0.96 / (20 + 2));\n}\n.gamePanel .tetrisCell.blink[data-v-87f2083e] {\n  animation: blink-87f2083e 0.6s both;\n}\n.gamePanel .tetrisCell.tetrisCellColor-i[data-v-87f2083e] {\n  background: #02ffff;\n  border: calc(calc(max(min(calc(100vh - 32rem), calc(100vw - 8rem)), 29.7rem) * 0.96 / (20 + 2)) * 0.2) solid #b4ffff;\n  border-right-color: #00b4b3;\n  border-bottom-color: #004a4b;\n  border-left-color: #4cffff;\n}\n.gamePanel .tetrisCell.tetrisCellColor-j[data-v-87f2083e] {\n  background: #0000ab;\n  border: calc(calc(max(min(calc(100vh - 32rem), calc(100vw - 8rem)), 29.7rem) * 0.96 / (20 + 2)) * 0.2) solid #b4b4e7;\n  border-right-color: #000078;\n  border-bottom-color: #00002f;\n  border-left-color: #4c4cc5;\n}\n.gamePanel .tetrisCell.tetrisCellColor-l[data-v-87f2083e] {\n  background: #ff7700;\n  border: calc(calc(max(min(calc(100vh - 32rem), calc(100vw - 8rem)), 29.7rem) * 0.96 / (20 + 2)) * 0.2) solid #ffd8b5;\n  border-right-color: #b35200;\n  border-bottom-color: #4b1d00;\n  border-left-color: #ffa24c;\n}\n.gamePanel .tetrisCell.tetrisCellColor-o[data-v-87f2083e] {\n  background: #ffff00;\n  border: calc(calc(max(min(calc(100vh - 32rem), calc(100vw - 8rem)), 29.7rem) * 0.96 / (20 + 2)) * 0.2) solid #ffffb5;\n  border-right-color: #b3b302;\n  border-bottom-color: #4b4b00;\n  border-left-color: #ffff4c;\n}\n.gamePanel .tetrisCell.tetrisCellColor-s[data-v-87f2083e] {\n  background: #00ff00;\n  border: calc(calc(max(min(calc(100vh - 32rem), calc(100vw - 8rem)), 29.7rem) * 0.96 / (20 + 2)) * 0.2) solid #b4ffb4;\n  border-right-color: #00b400;\n  border-bottom-color: #004a00;\n  border-left-color: #4cff4b;\n}\n.gamePanel .tetrisCell.tetrisCellColor-t[data-v-87f2083e] {\n  background: #cd00cd;\n  border: calc(calc(max(min(calc(100vh - 32rem), calc(100vw - 8rem)), 29.7rem) * 0.96 / (20 + 2)) * 0.2) solid #f0b5f1;\n  border-right-color: #8f008f;\n  border-bottom-color: #3b003a;\n  border-left-color: #dc4cdb;\n}\n.gamePanel .tetrisCell.tetrisCellColor-z[data-v-87f2083e] {\n  background: #ff0000;\n  border: calc(calc(max(min(calc(100vh - 32rem), calc(100vw - 8rem)), 29.7rem) * 0.96 / (20 + 2)) * 0.2) solid #ffb5b4;\n  border-right-color: #b30100;\n  border-bottom-color: #4b0000;\n  border-left-color: #ff4b4b;\n}\n.gamePanel .tetrisCell.tetrisCellGrid[data-v-87f2083e] {\n  background: #787878;\n  border: calc(calc(max(min(calc(100vh - 32rem), calc(100vw - 8rem)), 29.7rem) * 0.96 / (20 + 2)) * 0.2) solid #d7d7d7;\n  border-right-color: #525252;\n  border-bottom-color: #1e1e1e;\n  border-left-color: #a1a1a1;\n}";const{mapState:k,mapActions:P}=n("tetris"),_=["i","j","l","o","s","t","z"],T={name:"tetris",components:{Container:w},data:()=>({inited:!1,gridCells:{col:10,row:20},matrix:null,rotate:0,position:null,currentTetrimino:null,nextTetrimino:null,score:0,lines:0,start:!1,end:!1,pause:!1,lock:!1,clearing:!1,clearIndexs:[],intervalID:void 0}),computed:a({movable:function(){return this.start&&!this.end&&!this.clearing&&!this.pause},level:function(){return Math.ceil(this.lines/10)},nextTetriminoMatrixLegend:function(){return this.nextTetrimino?C[this.nextTetrimino+"Legend"]:null},positions:function(){return this.currentTetrimino?this._getPositions(this._getRotatedMatrix(this.rotate),this.position):null},currentMatrix:function(){if(this.currentTetrimino){const e=l.exports.cloneDeep(this.matrix);for(const t of this.positions)t[0]>=0&&t[0]<this.gridCells.row&&t[1]>=0&&t[1]<this.gridCells.col&&(e[t[0]][t[1]]=this.currentTetrimino);return e}return this.matrix}},k(["bestScore"])),mounted(){this.resetGame(),this.getNextTetrimino(),this.addListener(),this.inited=!0},methods:a({playGame(){this.start||(this.score=0,this.lines=0,this.getNextTetrimino(),this.start=!0,this.intervalID=setInterval((()=>{this.clearing||this.moveDown()}),1e3))},resetGame(){const e=Array(this.gridCells.row);for(const t of l.exports.range(this.gridCells.row))e[t]=Array(this.gridCells.col).fill("");this.matrix=e,this.rotate=0,this.resetPosition(),this.currentTetrimino=void 0,this.start=!1,this.end=!1,this.pause=!1,this.lock=!1,this.clearing=!1},pauseGame(e){e?this.lock=!0:!1===e&&(this.lock=!1),this.start&&(!1===this.lock||e)&&(this.pause?(this.pause=!this.pause,this.intervalID=setInterval((()=>{this.clearing||this.moveDown()}),1e3)):(this.pause=!this.pause,clearInterval(this.intervalID)))},resetPosition(){this.rotate=0,this.position=[0,Math.ceil(this.gridCells.col/2)]},updateMatrix(){if(this.start){for(const t of this.positions)t[0]<0&&(this.end=!0);if(this.matrix=l.exports.cloneDeep(this.currentMatrix),this.end){this.pauseGame(!0),this.clearIndexs=[];for(const e of l.exports.range(this.gridCells.row))this.clearIndexs.push(e);return void setTimeout((()=>{this.score>this.bestScore&&this.setBestScore(this.score),this.clearIndexs=[],this.resetGame()}),600)}this.score+=4;const e=[];for(const t in this.matrix){0===this.matrix[t].filter((e=>""===e)).length&&e.push(parseInt(t))}if(e.length>0){this.clearing=!0,this.pauseGame(!0),this.clearIndexs=e;const t=l.exports.cloneDeep(this.matrix);for(let e=this.clearIndexs.length-1;e>=0;e--)t.splice(this.clearIndexs[e],1);const r=Array(this.clearIndexs.length);for(const e of l.exports.range(this.clearIndexs.length))r[e]=Array(this.gridCells.col).fill("");setTimeout((()=>{switch(this.lines+=this.clearIndexs.length,this.clearIndexs.length){case 1:this.score+=40*this.level;break;case 2:this.score+=100*this.level;break;case 3:this.score+=300*this.level;break;case 4:this.score+=1200*this.level;break}this.clearIndexs=[],this.matrix=[...r,...t],this.getNextTetrimino(),this.resetPosition(),this.clearing=!1,this.pauseGame(!1)}),600)}else this.getNextTetrimino(),this.resetPosition()}},getNextTetrimino(){this.currentTetrimino=this.nextTetrimino,this.nextTetrimino=_[l.exports.random(0,6)]},rotateRight(){this.movable&&!this._hasConflict(this._getPositions(this._getRotatedMatrix(this.rotate-1),this.position))&&this.rotate++},rotateLeft(){this.movable&&!this._hasConflict(this._getPositions(this._getRotatedMatrix(this.rotate-1),this.position))&&this.rotate--},moveLeft(){this.movable&&!this._hasConflict(this._getPositions(this._getRotatedMatrix(this.rotate),[this.position[0],this.position[1]-1]))&&this.position[1]--},moveRight(){this.movable&&!this._hasConflict(this._getPositions(this._getRotatedMatrix(this.rotate),[this.position[0],this.position[1]+1]))&&this.position[1]++},moveDown(){this.movable&&(this._hasConflict(this._getPositions(this._getRotatedMatrix(this.rotate),[this.position[0]+1,this.position[1]]))?this.updateMatrix():this.position[0]++)},moveBottom(){if(this.movable){let e=0;for(;!this._hasConflict(this._getPositions(this._getRotatedMatrix(this.rotate),[this.position[0]+e+1,this.position[1]]));)e++;this.position[0]+=e,this.updateMatrix()}},addListener(){document.addEventListener("keydown",this._keyboardEvent.bind(this))},removeListener(){document.removeEventListener("keydown",this._keyboardEvent.bind(this))},_getRotatedMatrix(e){let t=e%C[this.currentTetrimino].length;return t<0&&(t+=C[this.currentTetrimino].length),C[this.currentTetrimino][t]},_getPositions(e,t){const r=[];for(let i=0;i<e.length;i++)for(let s=0;s<e[i].length;s++)if(1===e[i][s])switch(this.currentTetrimino){case"i":case"o":r.push([t[0]-2+i,t[1]-2+s]);break;case"j":case"l":case"t":r.push([t[0]-1+i,t[1]-1+s]);break;case"s":case"z":r.push([t[0]-2+i,t[1]-1+s]);break;default:return null}return r},_keyboardEvent(e){if(!(e.altKey||e.ctrlKey||e.metaKey||e.shiftKey))switch(e.code){case"Space":this.start?(this.pause&&this.pauseGame(),this.moveBottom()):this.playGame();break;case"KeyW":case"KeyE":case"ArrowUp":this.pause&&this.pauseGame(),this.rotateRight();break;case"KeyQ":this.pause&&this.pauseGame(),this.rotateLeft();break;case"KeyS":case"ArrowDown":this.pause&&this.pauseGame(),this.moveDown();break;case"KeyA":case"ArrowLeft":this.pause&&this.pauseGame(),this.moveLeft();break;case"KeyD":case"ArrowRight":this.pause&&this.pauseGame(),this.moveRight();break;case"KeyP":this.pauseGame();break}},_hasConflict(e){for(const t of e){if(t[0]>=this.gridCells.row||t[1]<0||t[1]>=this.gridCells.col)return!0;if(t[0]>=0&&""!==this.matrix[t[0]][t[1]])return!0}return!1}},P(["setBestScore"])),beforeUnmount(){this.removeListener()}},G=p();c("data-v-87f2083e");const I={class:"gamePanel"},L={class:"tetrisPanel"},M={class:"tetrisMainPanel"},j={key:1,class:"tetrisCell"},D={class:"infoPanel"},R={class:"info"},K={class:"info"},A={class:"info"},z={class:"info"},S=f("div",{class:"info"},"下一个",-1),E={class:"nextTetrimino"},O={key:1,class:"tetrisCell"};h();const N=G(((e,t,r,i,s,a)=>{const o=x("container");return m(),d(o,null,{default:G((()=>[f("div",I,[f("div",L,[(m(!0),d(b,null,g(2*e.gridCells.col+2*e.gridCells.row+4,(e=>(m(),d("div",{class:["tetrisCell","tetrisCellGrid"],key:"tetrisFrameGrid"+e})))),128)),f("div",M,[e.inited?(m(!0),d(b,{key:0},g(e.gridCells.row,(t=>(m(),d(b,{key:t},[(m(!0),d(b,null,g(e.gridCells.col,(r=>(m(),d(b,{key:r},[a.currentMatrix[t-1][r-1]?(m(),d("div",{key:0,class:["tetrisCell","tetrisCellColor-"+a.currentMatrix[t-1][r-1],e.clearIndexs.includes(t-1)?"blink":""]},null,2)):(m(),d("div",j))],64)))),128))],64)))),128)):v("",!0)])]),f("div",D,[f("div",R,"最高分: "+u(e.bestScore),1),f("div",K,"得分: "+u(e.score),1),f("div",A,"消除行: "+u(e.lines),1),f("div",z,"级别: "+u(a.level),1),S,f("div",E,[e.inited?(m(),d(b,{key:0},g(2,(t=>(m(),d(b,{key:t},[(m(),d(b,null,g(4,(r=>(m(),d(b,{key:r},[a.nextTetriminoMatrixLegend[t-1][r-1]?(m(),d("div",{key:0,class:["tetrisCell","tetrisCellColor-"+e.nextTetrimino]},null,2)):(m(),d("div",O))],64)))),64))],64)))),64)):v("",!0)]),f("div",{class:"startGame",onClick:t[1]||(t[1]=(...e)=>a.playGame&&a.playGame(...e))}," 开始游戏 ")])])])),_:1})}));T.render=N,T.__scopeId="data-v-87f2083e";export default T;
