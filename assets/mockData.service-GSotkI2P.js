import{l as n,dq as u,dr as d,al as a,I as t}from"./index-6zGE5DCB.js";import{d as l}from"./dayjs.min-9hzSS0GQ.js";const p={id:-1,name:"",type:"get",enabled:!0,path:"",description:"",delay:0,response:"",projectId:""},s=n(),i=n([]);function $(){if(!s.value)throw new Error("未选择项目");return{...p,projectId:s.value.id}}async function y(e){s.value=e,i.value=[],s.value?(u("prjId",s.value.id),await o()):d("prjId")}async function D(e){try{if((await a.put(`${a.$apiBase}/mock/api/data/${e.id}`,{...e,id:void 0,projectId:void 0}).then(a.getData)).success)return t.success("修改数据成功"),o().then(),!0;t.error("修改数据失败")}catch{t.error("修改数据失败")}return!1}async function v(e){var r;try{if((await a.post(`${a.$apiBase}/mock/api/data`,{...e,id:void 0,projectId:(r=s.value)==null?void 0:r.id}).then(a.getData)).success)return t.success("创建数据成功"),o().then(),!0;t.error("创建数据失败")}catch{t.error("创建数据失败")}return!1}async function g(e){try{if((await a.delete(`${a.$apiBase}/mock/api/data/${e.id}`).then(a.getData)).success)return t.success("删除数据成功"),o().then(),!0;t.error("删除数据失败")}catch{t.error("删除数据失败")}return!1}async function o(){if(!s.value){t.error("未选择项目");return}try{i.value=await f(s.value)}catch(e){console.log(e),t.error("获取数据列表失败")}}async function f(e){const r=await a.get(`${a.$apiBase}/mock/api/prj/${e.id}/list`).then(a.getData);if(r.success)return(r.data||[]).map(c=>(c.createdAt=l(c.createdAt).format("YYYY-MM-DD HH:mm:ss"),c.url=`${a.$apiBase}/mock/${e.id}${e.path}${c.path}`,c));throw new Error(r.message)}export{y as a,v as c,g as d,D as e,$ as g,i as m,s};
