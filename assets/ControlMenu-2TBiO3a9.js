import{g as P,h as S,A as B,j as m,s as x,w as M,as as h,I as G,E as I,o as b,z as _,at as v,B as k}from"./index-j7kdK-H8.js";import{c as J}from"./createFile-wJ5ZCQ66.js";function N(e,i){var t,s,n,r,o,a,u,l,c,p,d=0,f=e.type==="FeatureCollection",g=e.type==="Feature",E=f?e.features.length:1;for(t=0;t<E;t++){for(a=f?e.features[t].geometry:g?e.geometry:e,l=f?e.features[t].properties:g?e.properties:{},c=f?e.features[t].bbox:g?e.bbox:void 0,p=f?e.features[t].id:g?e.id:void 0,u=a?a.type==="GeometryCollection":!1,o=u?a.geometries.length:1,n=0;n<o;n++){if(r=u?a.geometries[n]:a,r===null){if(i(null,d,l,c,p)===!1)return!1;continue}switch(r.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":{if(i(r,d,l,c,p)===!1)return!1;break}case"GeometryCollection":{for(s=0;s<r.geometries.length;s++)if(i(r.geometries[s],d,l,c,p)===!1)return!1;break}default:throw new Error("Unknown Geometry Type")}}d++}}function A(e,i,t){var s=t;return N(e,function(n,r,o,a,u){r===0&&t===void 0?s=n:s=i(s,n,r,o,a,u)}),s}var w=6378137;function L(e){return A(e,function(i,t){return i+O(t)},0)}function O(e){var i=0,t;switch(e.type){case"Polygon":return C(e.coordinates);case"MultiPolygon":for(t=0;t<e.coordinates.length;t++)i+=C(e.coordinates[t]);return i;case"Point":case"MultiPoint":case"LineString":case"MultiLineString":return 0}return 0}function C(e){var i=0;if(e&&e.length>0){i+=Math.abs(F(e[0]));for(var t=1;t<e.length;t++)i-=Math.abs(F(e[t]))}return i}function F(e){var i,t,s,n,r,o,a,u=0,l=e.length;if(l>2){for(a=0;a<l;a++)a===l-2?(n=l-2,r=l-1,o=0):a===l-1?(n=l-1,r=0,o=1):(n=a,r=a+1,o=a+2),i=e[n],t=e[r],s=e[o],u+=(y(s[0])-y(i[0]))*Math.sin(y(t[1]));u=u*w*w/2}return u}function y(e){return e*Math.PI/180}const $={class:"controlMenu"},R={__name:"ControlMenu",setup(e){function i(n){if(n.target.files.length){const r=n.target.files[0],o=new FileReader;o.onload=()=>{if(o.result&&typeof o.result=="string")try{const a=JSON.parse(o.result);h.emit("updateEditor",a),h.emit("updateGeojsonLayer",a)}catch{}},o.readAsText(r)}n.target.value=""}function t(){h.emit("getGeoJson",function(n){n?J(JSON.stringify(n),"exportFile.geojson"):G.warning("无可导出数据")})}function s(){h.emit("getGeoJson",function(n){if(n){const r=L(n);r<1e6?v.alert(`面积: ${r.toFixed(2)} 平方米`,"信息"):r<1e8?v.alert(`面积: ${(r/1e4).toFixed(2)} 公顷`,"信息"):v.alert(`面积: ${(r/1e6).toFixed(2)} 平方千米`,"信息")}})}return(n,r)=>{const o=I;return b(),S("div",$,[B(m("input",{ref:"uploader",type:"file",accept:".json,.JSON,.geojson,.GEOJSON",onChange:i},null,544),[[k,!1]]),x(o,{onClick:r[0]||(r[0]=a=>n.$refs.uploader.click())},{default:M(()=>[_(" 打开 ")]),_:1}),x(o,{onClick:t},{default:M(()=>[_(" 保存 ")]),_:1}),m("i",{class:"i-icon-park-outline-info",onClick:s})])}}},D=P(R,[["__scopeId","data-v-709c4f88"]]);export{D as default};
